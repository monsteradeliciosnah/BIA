import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

class BusinessIntelligenceTool:
    def __init__(self, data_file):
        self.data_file = data_file
        self.data = None
    
    def load_data(self):
        self.data = pd.read_csv(self.data_file)
        print("Data loaded successfully.")
    
    def generate_summary(self):
        summary = self.data.describe()
        print("Data Summary:")
        print(summary)
        return summary
    
    def visualize_sales_trends(self, date_column, sales_column):
        self.data[date_column] = pd.to_datetime(self.data[date_column])
        sales_trends = self.data.groupby(date_column)[sales_column].sum()
        
        plt.figure(figsize=(12, 6))
        plt.plot(sales_trends, marker='o', linestyle='-', color='b')
        plt.title("Sales Trends Over Time")
        plt.xlabel("Date")
        plt.ylabel("Total Sales")
        plt.grid()
        plt.show()
    
    def detect_anomalies(self, column, threshold=2.5):
        mean = np.mean(self.data[column])
        std = np.std(self.data[column])
        self.data['Anomaly'] = np.abs((self.data[column] - mean) / std) > threshold
        anomalies = self.data[self.data['Anomaly']]
        print("Anomalies detected:")
        print(anomalies)
        return anomalies
    
    def run_analysis(self, date_column, sales_column):
        print("Loading data...")
        self.load_data()
        print("Generating summary...")
        self.generate_summary()
        print("Visualizing sales trends...")
        self.visualize_sales_trends(date_column, sales_column)
        print("Detecting anomalies...")
        self.detect_anomalies(sales_column)
        print("Analysis complete!")

if __name__ == "__main__":
    bi_tool = BusinessIntelligenceTool(data_file="sales_data.csv")
    bi_tool.run_analysis(date_column="date", sales_column="sales")
